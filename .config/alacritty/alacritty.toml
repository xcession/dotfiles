# $HOME/.config/alacritty/alacritty.toml

# ┳━┓┳  ┳━┓┏━┓┳━┓o┏┓┓┏┓┓┓ ┳
# ┃━┫┃  ┃━┫┃  ┃┳┛┃ ┃  ┃ ┗┏┛
# ┛ ┛┛━┛┛ ┛┗━┛┛┗┛┛ ┛  ┛  ┛
#
# GitHub:       https://github.com/xcession/dotfiles
# Maintainer:   Пэйнт (Tharawut Paripaiboon)

# Import additional configuration files
#
# Imports are loaded in order, skipping all missing files, with the importing
# file being loaded last. If a field is already present in a previous import, it
# will be replaced.
#
# All imports must either be absolute paths starting with `/`, or paths relative
# to the user's home directory starting with `~/`.
import = ["~/.config/alacritty/schemes/synthwave.toml",]

[env]
# TERM variable
#
# This value is used to set the `$TERM` environment variable for
# each instance of Alacritty. If it is not present, alacritty will
# check the local terminfo database and use `alacritty` if it is
# available, otherwise `xterm-256color` is used.
# TERM: alacritty
TERM = "xterm-256color"

[window]
# Window decorations
#
# Values for `decorations`:
#     - full: Borders and title bar
#     - none: Neither borders nor title bar
#
# Values for `decorations` (macOS only):
#     - transparent: Title bar, transparent background and title bar buttons
#     - buttonless: Title bar, transparent background and no title bar buttons
decorations = "full"
# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
opacity = 1.0

# Startup Mode (changes require restart)
#
# Values for `startup_mode`:
#   - Windowed
#   - Maximized
#   - Fullscreen
#
# Values for `startup_mode` (macOS only):
#   - SimpleFullscreen
# startup_mode = "Windowed"

# Window title
# title = "Alacritty"

# Allow terminal applications to change Alacritty's window title.
# dynamic_title = true

# Decorations theme variant (Linux/BSD only)
#
# Override the variant of the GTK theme/Wayland client side decorations.
# Commonly supported values are `dark` and `light`. Set this to `None` to use
# the default theme variant.
# decorations_theme_variant = "None"

[window.dimensions]
# Window dimensions (changes require restart)
#
# Number of lines/columns (not pixels) in the terminal. Both lines and columns
# must be non-zero for this to take effect. The number of columns must be at
# least `2`, while using a value of `0` for columns and lines will fall back
# to the window manager's recommended size
columns = 80
lines = 24

[window.position]
# Window position (changes require restart)
#
# Specified in number of pixels.
# If the position is not set, the window manager will handle the placement.
# x = 0
# y = 0

[window.padding]
# Window padding (changes require restart)
#
# Blank space added around the window in pixels. This padding is scaled
# by DPI and the specified value is always added at both opposing sides.
# x = 0
# y = 0

[window.class]
# Window class (Linux/BSD only):
#
# Application instance name
# instance = "Alacritty"
# General application class
# general = "Alacritty"

[scrolling]
# Maximum number of lines in the scrollback buffer.
# Specifying '0' will disable scrolling.
history = 5000
# Scrolling distance multiplier.
multiplier = 3

# Font configuration
[font]
# Point size
size = 14.0

# Use built-in font for box drawing characters.
#
# If `true`, Alacritty will use a custom built-in font for box drawing
# characters (Unicode points 2500 - 259f).
#
# builtin_box_drawing = true

# Normal (roman) font face
[font.normal]
# Font family
#
# Default:
#   - (macOS) Menlo
#   - (Linux/BSD) monospace
#   - (Windows) Consolas
family = "JetBrainsMono NF"

# The `style` can be specified to pick a specific face.
style = "Regular"

# Bold font face
[font.bold]
# Font family
#
# If the bold family is not specified, it will fall back to the
# value specified for the normal font.
# family = "monospace"

# The `style` can be specified to pick a specific face.
# style = "Bold"

# Italic font face
[font.italic]
# Font family
#
# If the italic family is not specified, it will fall back to the
# value specified for the normal font.
#family: "monospace"

# The `style` can be specified to pick a specific face.
#style: "Italic"

# Bold italic font face
[font.bold_italic]
# Font family
#
# If the bold italic family is not specified, it will fall back to the
# value specified for the normal font.
#family: "monospace"

# The `style` can be specified to pick a specific face.
#style: "Bold Italic"

[font.offset]
# Offset is the extra space around each character. `offset.y` can be thought
# of as modifying the line spacing, and `offset.x` as modifying the letter
# spacing.
# x = 0
# y = 0

[font.glyph_offset]
# Glyph offset determines the locations of the glyphs within their cells with
# the default being at the bottom. Increasing `x` moves the glyph to the
# right, increasing `y` moves the glyph upward.
# x = 0
# y = 0

[colors]
# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors = true

# Bell
#
# The bell is rung every time the BEL control character is received.
[bell]
# Visual Bell Animation
#
# Animation effect for flashing the screen when the visual bell is rung.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
# animation = "EaseOutExpo"

# Duration of the visual bell flash in milliseconds. A `duration` of `0` will
# disable the visual bell animation.
# duration = 0

# Visual bell animation color.
# color = "#ffffff"

# Bell Command
#
# This program is executed whenever the bell is rung.
#
# When set to `command = "None"`, no command will be executed.
#
# Example:
#   command:
#     program: notify-send
#     args: ["Hello, World!"]
#
# command = "None"

[selection]
# When set to `true`, selected text will be copied to the primary clipboard.
save_to_clipboard = false
# This string contains all characters that are used as separators for
# "semantic words" in Alacritty.
semantic_escape_chars = ",│`|:\"' ()[]{}<>\t"

[cursor]
# Vi mode cursor style
#
# If the vi mode cursor style is `None` or not specified, it will fall back to
# the style of the active value of the normal cursor.
#
# See `cursor.style` for available options.
# vi_mode_style = "None"

# Cursor blinking interval in milliseconds.
# blink_interval = 750

# Time after which cursor stops blinking, in seconds.
#
# Specifying '0' will disable timeout for blinking.
# blink_timeout = 5

# If this is `true`, the cursor will be rendered as a hollow box when the
# window is not focused.
unfocused_hollow = true

# Thickness of the cursor relative to the cell width as floating point number
# from `0.0` to `1.0`.
# thickness = 0.15

# Cursor style
[cursor.style]
# Cursor shape
#
# Values for `shape`:
#   - ▇ Block
#   - _ Underline
#   - | Beam
shape = "Block"

# Cursor blinking state
#
# Values for `blinking`:
#   - Never: Prevent the cursor from ever blinking
#   - Off: Disable blinking by default
#   - On: Enable blinking by default
#   - Always: Force the cursor to always blink
# blinking = "Off"

[[keyboard.bindings]]
action = "IncreaseFontSize"
key = "Equals"
mods = "Command"

[[keyboard.bindings]]
action = "IncreaseFontSize"
key = "Plus"
mods = "Command"

[[keyboard.bindings]]
action = "IncreaseFontSize"
key = "NumpadAdd"
mods = "Command"

[[keyboard.bindings]]
action = "DecreaseFontSize"
key = "Minus"
mods = "Command"

[[keyboard.bindings]]
action = "DecreaseFontSize"
key = "NumpadSubtract"
mods = "Command"

