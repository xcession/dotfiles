# $HOME/.config/sway/config
#
# ┓━┓┓ ┳┳━┓┓ ┳
# ┗━┓┃┃┃┃━┫┗┏┛
# ━━┛┗┻┛┛ ┛ ┛
# Sway config
#
# GitHub:       https://github.com/xcession/dotfiles
# Maintainer:   Пэйнт (Tharawut Paripaiboon)

# Read `man 5 sway` for a complete reference.

#: Autostart {{{

# run once: exec
# run with reload: exec_always

# polkit
exec --no-startup-id /usr/bin/lxpolkit

# desktop notification
exec --no-startup-id /usr/bin/mako

exec_always --no-startup-id /usr/bin/xrdb -load ~/.Xresources

# autotiling
exec_always --no-startup-id /usr/bin/autotiling-rs

# import gsettings
exec_always --no-startup-id ~/bin/import-gsettings

#: }}}

#: Variables {{{

# Mod key used for most binds
# MOD4 = SUPER
# (Use the `xmodmap` command to list them all)
set $mainMod MOD4

# direction keys
set $up k
set $down j
set $left h
set $right l

# preferred terminal
set $term foot

# preferred file manager
set $filemanager pcmanfm

# define monitor(s)
# (Use the 'swaymsg -t get_outputs')
set $laptop "LVDS-1"

# bar and window color
set $bg-color               #16161c
set $text-color             #fdf0ed
set $active-bg-color        #09f7a0
set $active-text-color      #16161c
set $inactive-bg-color      #232530
set $inactive-text-color    #6c6f93
set $urgent-bg-color        #f43e5c
set $indicator-color        #fab28e

set $border_size 2

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu tofi-drun | xargs swaymsg exec --
set $menu-alt tofi-run | xargs swaymsg exec --

#: }}}

#: Output {{{

# Font
font pango:Noto Sans 9

# Wallpaper
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg $HOME/.wallpaper.jpg fill

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# Laptop lid switch
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

#: }}}

#: Idle {{{
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' \
#               resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#: }}}

#: Input {{{

seat seat0 xcursor_theme WhiteSur-cursors 24

# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:keyboard" {
  repeat_delay 300
  repeat_rate 30
  xkb_options "grp:alt_shift_toggle"
}

input "1:1:AT_Translated_Set_2_keyboard" {
  xkb_layout "us,th"
}

input "1241:521:USB-HID_Keyboard" {
  xkb_layout "us,th"
}

input "2:10:TPPS/2_IBM_TrackPoint" {
  dwt enabled
  tap enabled
  natural_scroll enabled
  middle_emulation enabled
  scroll_factor 0.5
}

input "1267:32:Elan_TrackPoint" {
  dwt enabled
  tap enabled
  natural_scroll enabled
  middle_emulation disabled
  scroll_factor 0.5
}

input "2:7:SynPS/2_Synaptics_TouchPad" {
  events disabled
  dwt enabled
  tap enabled
  natural_scroll enabled
  middle_emulation enabled
}

input "1267:32:Elan_Touchpad" {
  events enabled
  dwt enabled
  tap disabled
  natural_scroll enabled
  middle_emulation enabled
}

input "1133:16489:Logitech_MX_Master_2S" {
  accel_profile "adaptive"
  dwt enabled
  natural_scroll enabled
  pointer_accel -0.9
  scroll_factor 2
}

#: }}}

#: Window control {{{

# workspace_layout default|stacking|tabbed
workspace_layout default

focus_follows_mouse yes
default_orientation horizontal

# border & title
for_window [class="^.*"] pixel $border_size, \
  title_format "<b>%class >> %title</b>"

default_border pixel $border_size
default_floating_border pixel $border_size

# hide_edge_borders none|vertical|horizontal|both|smart
hide_edge_borders smart

# window colors
# client    border    background \
#   text    indicator
client.focused            $active-bg-color    $active-bg-color \
  $active-text-color      $indicator-color
client.unfocused          $inactive-bg-color  $bg-color \
  $inactive-text-color    $indicator-color
client.focused_inactive   $inactive-bg-color	$inactive-bg-color \
  $inactive-text-color    $indicator-color
client.urgent             $urgent-bg-color    $urgent-bg-color \
  $active-text-color      $indicator-color

# switch to workspace with urgent window
for_window [urgent="latest"]    focus
focus_on_window_activation      focus

# gaps
gaps inner 8
gaps outer 0

# only enable gaps on a workspace when there is at least one window
smart_gaps on

# borders will only be enabled if the workspace has more than one visible child.
smart_borders on

# maximum size of floating windows
floating_maximum_size 1280 x 720

#: }}}

#: Binds {{{

# Mod key used for most binds
# MOD1 = ALT
# (Use the `xmodmap` command to list them all)
#
# Syntax:
# bindsym [--release] [<Group>+][<Modifiers>+]<keysym> command
# bindcode [--release] [<Group>+][<Modifiers>+]<keycode> command

#: Basic {{{

# Terminal
bindsym $mainMod+T exec --no-startup-id $term
bindsym $mainMod+RETURN exec --no-startup-id $term

# File manager
bindsym $mainMod+SHIFT+RETURN exec --no-startup-id $filemanager

# Kill focused window
bindsym $mainMod+SHIFT+Q kill
# bindsym ALT+Q kill
# bindsym ALT+F4 kill

# Launcher
bindsym $mainMod+D exec $menu
bindsym $mainMod+MOD1+D exec $menu-alt

# Reload the configuration file
bindsym $mainMod+SHIFT+C reload

# Exit sway (logs you out of your Wayland session)
bindsym $mainMod+SHIFT+E exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

#: }}}

#: Binding modes {{{

mode "resize" {
  # up will shrink the window’s height.
  # down will grow the window’s height.
  # left will shrink the window’s width.
  # right will grow the window’s width.
  bindsym $up     resize shrink   height  10 px or 10 ppt
  bindsym $down   resize grow     height  10 px or 10 ppt
  bindsym $left   resize shrink   width   10 px or 10 ppt
  bindsym $right  resize grow     width   10 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Up      resize shrink   height  10 px or 10 ppt
  bindsym Down    resize grow     height  10 px or 10 ppt
  bindsym Left    resize shrink   width   10 px or 10 ppt
  bindsym Right   resize grow     width   10 px or 10 ppt

  # back to default mode
  bindsym RETURN mode "default"
  bindsym ESCAPE mode "default"
  bindsym $mainMod+R mode "default"
}

bindsym $mainMod+R mode "resize"

mode "mouse" {
  bindsym $up seat - cursor move 0 -10
  bindsym $down seat - cursor move 0 10
  bindsym $left seat - cursor move -10 0
  bindsym $right seat - cursor move 10 0
  # bindsym KP_Home seat - cursor move -10 -10
  # bindsym KP_End seat - cursor move -10 10
  # bindsym KP_Prior seat - cursor move 10 -10
  # bindsym KP_Next seat - cursor move 10 10
  bindsym --release U seat - cursor press BTN_LEFT, seat - cursor release BTN_LEFT
  bindsym I seat - cursor press BTN_RIGHT, seat - cursor release BTN_RIGHT

  # back to default mode
  bindsym RETURN mode "default"
  bindsym ESCAPE mode "default"
  bindsym $mainMod+M mode "default"
}

bindsym $mainMod+M mode "mouse"

#: }}}

#: Moving around {{{

# Move focus with arrow keys
bindsym $mainMod+$up    focus up
bindsym $mainMod+$down  focus down
bindsym $mainMod+$left  focus left
bindsym $mainMod+$right focus right

# Move focus with hjkl keys
bindsym $mainMod+Up     focus up
bindsym $mainMod+Down   focus down
bindsym $mainMod+Left   focus left
bindsym $mainMod+Right  focus right

#: }}}

#: Workspaces {{{

workspace_auto_back_and_forth yes

# Switch workspaces
bindsym $mainMod+1 workspace number 1
bindsym $mainMod+2 workspace number 2
bindsym $mainMod+3 workspace number 3
bindsym $mainMod+4 workspace number 4
bindsym $mainMod+5 workspace number 5
bindsym $mainMod+6 workspace number 6
bindsym $mainMod+7 workspace number 7
bindsym $mainMod+8 workspace number 8
bindsym $mainMod+9 workspace number 9
bindsym $mainMod+0 workspace number 10

# Move active window to a workspace
bindsym $mainMod+SHIFT+1 move container to workspace number 1; workspace number 1
bindsym $mainMod+SHIFT+2 move container to workspace number 2; workspace number 2
bindsym $mainMod+SHIFT+3 move container to workspace number 3; workspace number 3
bindsym $mainMod+SHIFT+4 move container to workspace number 4; workspace number 4
bindsym $mainMod+SHIFT+5 move container to workspace number 5; workspace number 5
bindsym $mainMod+SHIFT+6 move container to workspace number 6; workspace number 6
bindsym $mainMod+SHIFT+7 move container to workspace number 7; workspace number 7
bindsym $mainMod+SHIFT+8 move container to workspace number 8; workspace number 8
bindsym $mainMod+SHIFT+9 move container to workspace number 9; workspace number 9
bindsym $mainMod+SHIFT+0 move container to workspace number 10; workspace number 10

# move the current workspace to the next output
bindsym $mainMod+ALT+BACKSLASH move workspace to output right

#: }}}

#: Windows {{{

# Move active window with hjkl keys
bindsym $mainMod+SHIFT+$up      move up     10px
bindsym $mainMod+SHIFT+$down    move down   10px
bindsym $mainMod+SHIFT+$left    move left   10px
bindsym $mainMod+SHIFT+$right   move right  10px

# Move active window with arrow keys
bindsym $mainMod+SHIFT+Up       move up     10px
bindsym $mainMod+SHIFT+Down     move down   10px
bindsym $mainMod+SHIFT+Left     move left   10px
bindsym $mainMod+SHIFT+Right    move right  10px

# Drag floating windows by holding down $mainMod and left mouse button.
# Resize them with right mouse button + $mainMod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
floating_modifier $mainMod normal

# Pin active floating window
bindsym MOD1+BACKSLASH sticky toggle

#: }}}

#: Layouts {{{

# split layout
bindsym $mainMod+B splith
bindsym $mainMod+V splitv

# switch between layouts
bindsym $mainMod+S layout stacking
bindsym $mainMod+W layout tabbed
bindsym $mainMod+E layout toggle split

# make the current focus fullscreen
bindsym $mainMod+F fullscreen toggle

# toggle the current focus between tiling / floating
bindsym $mainMod+SHIFT+SPACE floating toggle

# change focus between tiling / floating windows
bindsym $mainMod+SPACE focus mode_toggle

# move focus between parent / child windows
# bindsym $mainMod+P focus parent
# bindsym $mainMod+C focus child
bindsym $mainMod+A focus parent

#: }}}

#: Scratchpad {{{

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mainMod+SHIFT+minus move scratchpad

# Show the next scratchpad window or hide the current focus scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mainMod+minus scratchpad show

#: }}}

#: Border & Gaps {{{

# toggle border
bindsym $mainMod+SHIFT+B border toggle

# changing border style
# bindsym $mainMod+N border normal
# bindsym $mainMod+Y border pixel $border_size
# bindsym $mainMod+U border none

# change gaps
# bindsym $mainMod+plus                   gaps inner current plus  5
# bindsym $mainMod+minus                  gaps inner current minus 5
# bindsym $mainMod+SHIFT+plus             gaps outer current plus  5
# bindsym $mainMod+SHIFT+minus            gaps outer current minus 5
# bindsym $mainMod+Control+plus           gaps inner all     plus  5
# bindsym $mainMod+Control+minus          gaps inner all     minus 5
# bindsym $mainMod+Control+SHIFT+plus     gaps outer all     plus  5
# bindsym $mainMod+Control+SHIFT+minus    gaps outer all     minus 5

#: }}}

#: Media control {{{

# Audio
bindsym XF86AudioMute           exec amixer set Master toggle
bindsym XF86AudioMicMute        exec amixer set Capture toggle
bindsym XF86AudioRaiseVolume    exec amixer set Master 2.5%+
bindsym XF86AudioLowerVolume    exec amixer set Master 2.5%-

# play/pause keys for spotify
bindsym XF86AudioPlay exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
bindsym XF86AudioNext exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next
bindsym XF86AudioPrev exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous

#: }}}

#: Misc {{{

# Backlight
bindsym XF86MonBrightnessUp     exec --no-startup-id light -A 10 && notify-send 'Brightness UP' -u low
bindsym XF86MonBrightnessDown   exec --no-startup-id light -U 10 && notify-send 'Brightness DOWN' -u low

# Screenshot
bindsym PRINT exec --no-startup-id grim -g "$(slurp)" $(xdg-user-dir)/Captures/$(date +'%s_grim.png')

#: }}}

#: }}}

#: Status Bar {{{

# Read `man 5 sway-bar` for more information about this section.
bar {
	# position top

  # When the status_command prints a new line to stdout, swaybar updates.
  # The default just shows the current date and time.
  # status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

  # colors {
  #     statusline #ffffff
  #     background #323232
  #     inactive_workspace #32323200 #32323200 #5c5c5c
  # }

  swaybar_command waybar

}

#: }}}

#: Window rules {{{

for_window [shell=".*"] title_format "%title :: %shell"

# Assign applications to specific workspace
assign [class="(?i)(?:firefox)"] \
  number 1

for_window [class="(?i)(?:spotify)"] \
  move --no-auto-back-and-forth to workspace number 10

for_window [class="(?i)(?:KeePassXC)"] \
  move --no-auto-back-and-forth to workspace number 10

for_window [app_id="(?i)(?:telegram)"] \
  move --no-auto-back-and-forth to workspace 9

# focus, floating, & sticky
for_window [class="(?i)(?:qt5ct|pinentry|yad)"] \
  floating enable, focus
for_window [title="(?i)(?:copying|deleting|moving)"] \
  floating enable
for_window [window_role="(?i)(?:about|pop-up|setup)"] \
  floating enable


for_window [class="(?i)(?:Tk)"] \
  floating enable

for_window [title="Android Emulator"] \
  floating enable
for_window [class="(?i)(?:jetbrains-*)"] \
  floating enable
# GOG installer
for_window [class="(?i)(?:mojosetup)"] \
  floating enable
# Flameshot
for_window [class="(?i)(?:flameshot)"] \
  floating enable
#Ulauncher
for_window [class="(?i)(?:ulauncher)"] \
  border none, floating enable

popup_during_fullscreen smart

#: }}}

include /etc/sway/config.d/*

# vim:fileencoding=utf-8:ft=conf:foldmethod=marker
