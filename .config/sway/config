# $HOME/.config/sway/config
#
# ┓━┓┓ ┳┳━┓┓ ┳
# ┗━┓┃┃┃┃━┫┗┏┛
# ━━┛┗┻┛┛ ┛ ┛
# Sway config
#
# GitHub:       https://github.com/xcession/dotfiles
# Maintainer:   Пэйнт (Tharawut Paripaiboon)

#: Autostart {{{

# run once: exec
# run with reload: exec_always

# polkit
exec --no-startup-id /usr/bin/lxpolkit &

# desktop notification
exec --no-startup-id /usr/bin/dunst

exec_always --no-startup-id xrdb -load ~/.Xresources

# autotiling
exec_always --no-startup-id autotiling

# import gsettings
exec_always --no-startup-id ~/bin/import-gsettings

# clamshell detect
exec_always --no-startup-id ~/bin/sway_clamshell

#: }}}

#: Variables {{{

# mod key used for most binds
# Mod1 = Alt
# Mod4 = Super
# (Use the `xmodmap` command to list them all)
set $mod Mod4

# direction keys
set $up k
set $down j
set $left h
set $right l

# preferred terminal
set $term alacritty

# preferred file manager
set $filemanager pcmanfm

# define workspace
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "0"

# define monitor(s)
# (Use the 'swaymsg -t get_outputs')
set $laptop "LVDS-1"
set $mon1 "HDMI-A-1"
set $mon2 "DP-2"

# bar and window color
set $bg-color               #16161c
set $text-color             #fdf0ed
set $active-bg-color        #09f7a0
set $active-text-color      #16161c
set $inactive-bg-color      #232530
set $inactive-text-color    #6c6f93
set $urgent-bg-color        #f43e5c
set $indicator-color        #fab28e

set $border_size 2

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $launcher ulauncher
set $menu bemenu-run -m 0 -i -p "run >" \
  --fn 'RobotoCondensed Regular 13' \
  --tb '$inactive-bg-color' --tf '$active-bg-color' \
  --fb '$bg-color' --ff '$active-bg-color' \
  --nb '$bg-color' --nf '$text-color' \
  --hb '$active-bg-color' --hf '$active-text-color' \
  --sb '$active-bg-color' --sf '$active-text-color' \
  | xargs swaymsg exec --

#: }}}

#: Initialize workspace {{{

focus_follows_mouse yes
default_orientation horizontal

# workspace_layout default|stacking|tabbed
workspace_layout default

workspace $ws1 output $mon1
workspace $ws2 output $mon1
workspace $ws3 output $mon1
workspace $ws4 output $mon1
workspace $ws5 output $mon1
workspace $ws6 output $mon2
workspace $ws7 output $mon2
workspace $ws8 output $mon2
workspace $ws9 output $mon2
workspace $ws10 output $mon2

#: }}}

#: Output configuration {{{

# font
font pango:Noto Sans 9

# wallpaper
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg $HOME/.wallpaper.jpg fill

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

#: }}}

#: Idle configuration {{{
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#: }}}

#: Input configuration {{{

# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:keyboard" {
  repeat_delay 300
  repeat_rate 30
  xkb_layout "us,th"
  xkb_options "grp:alt_shift_toggle""
}

input "2:10:TPPS/2_IBM_TrackPoint" {
  dwt enabled
  tap enabled
  natural_scroll enabled
  middle_emulation enabled
}

input "2:7:SynPS/2_Synaptics_TouchPad" {
  events disabled
  dwt enabled
  tap enabled
  natural_scroll enabled
  middle_emulation enabled
}

input "1:1:AT_Translated_Set_2_keyboard" {
  xkb_layout "gb,th"
  xkb_options "grp:alt_shift_toggle""
}

input "1133:16489:Logitech_MX_Master_2S" {
  accel_profile adaptive
  dwt enabled
  natural_scroll enabled
  pointer_accel -0.2
}

#: }}}

#: Window control {{{

# border & title
for_window [class="^.*"] pixel $border_size, \
  title_format "<b>%class >> %title</b>"

default_border pixel $border_size
default_floating_border pixel $border_size

# hide_edge_borders none|vertical|horizontal|both|smart
hide_edge_borders smart

# window colors
# client    border    background \
#   text    indicator
client.focused            $active-bg-color    $active-bg-color \
  $active-text-color      $indicator-color
client.unfocused          $inactive-bg-color  $bg-color \
  $inactive-text-color    $indicator-color
client.focused_inactive   $inactive-bg-color	$inactive-bg-color \
  $inactive-text-color    $indicator-color
client.urgent             $urgent-bg-color    $urgent-bg-color \
  $active-text-color      $indicator-color

# switch to workspace with urgent window
for_window [urgent="latest"]    focus
focus_on_window_activation      focus

# gaps
gaps inner 8
gaps outer 0

#: }}}

#: Key bindings {{{

# Syntax:
# bindsym [--release] [<Group>+][<Modifiers>+]<keysym> command
# bindcode [--release] [<Group>+][<Modifiers>+]<keycode> command

#: Basic {{{

# terminal
bindsym $mod+t          exec --no-startup-id $term
bindsym $mod+Return     exec --no-startup-id $term

# file manager
bindsym $mod+Shift+Return exec --no-startup-id $filemanager

# kill focused window
bindsym $mod+Shift+q kill
bindsym Mod1+q kill
bindsym Mod1+F4 kill

# launcher
bindsym Control+space exec $launcher
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
floating_modifier $mod normal

# reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

#: }}}

#: Moving around {{{

# move focus around
bindsym $mod+$up    focus up
bindsym $mod+$down  focus down
bindsym $mod+$left  focus left
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Up     focus up
bindsym $mod+Down   focus down
bindsym $mod+Left   focus left
bindsym $mod+Right  focus right

# move focused window
bindsym $mod+Shift+$up      move up     10px
bindsym $mod+Shift+$down    move down   10px
bindsym $mod+Shift+$left    move left   10px
bindsym $mod+Shift+$right   move right  10px
# Or use $mod+Shift+[up|down|left|right]
bindsym $mod+Shift+Up       move up     10px
bindsym $mod+Shift+Down     move down   10px
bindsym $mod+Shift+Left     move left   10px
bindsym $mod+Shift+Right    move right  10px

#: }}}

#: Workspaces {{{

workspace_auto_back_and_forth yes

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# switch to next or previous workspace
bindsym $mod+Mod1+Left workspace prev
bindsym $mod+Mod1+Right workspace next

# move focused window to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1; workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2; workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3; workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4; workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5; workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6; workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7; workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8; workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9; workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10; workspace number $ws10

# move the current workspace to the next output
bindsym $mod+\ move workspace to output next

#: }}}

#: Layouts {{{

# split layout
bindsym $mod+b splith
bindsym $mod+v splitv

# switch between layouts
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# make the current focus fullscreen
bindsym $mod+f fullscreen toggle

# toggle the current focus between tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

#TODO:
# move focus between parent / child windows
# bindsym $mod+p focus parent
# bindsym $mod+c focus child
bindsym $mod+a focus parent

#: }}}

#: Scratchpad {{{

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# move the current focus window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the current focus scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#: }}}

#: Resizing windows {{{

mode "resize" {
#TODO: Check if 'ppt' value is valid
  # up will shrink the window’s height.
  # down will grow the window’s height.
  # left will shrink the window’s width.
  # right will grow the window’s width.
  bindsym $up     resize shrink   height  10 px or 10 ppt
  bindsym $down   resize grow     height  10 px or 10 ppt
  bindsym $left   resize shrink   width   10 px or 10 ppt
  bindsym $right  resize grow     width   10 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Up      resize shrink   height  10 px or 10 ppt
  bindsym Down    resize grow     height  10 px or 10 ppt
  bindsym Left    resize shrink   width   10 px or 10 ppt
  bindsym Right   resize grow     width   10 px or 10 ppt

  # back to default mode
  bindsym Return mode "default"
  bindsym Escape mode "default"
  # bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#: }}}

#: Border & Gaps {{{

#TODO:
bindsym $mod+Shift+b border toggle

# changing border style
# bindsym $mod+n border normal
# bindsym $mod+y border pixel $border_size
# bindsym $mod+u border none

# change gaps
# bindsym $mod+plus                   gaps inner current plus  5
# bindsym $mod+minus                  gaps inner current minus 5
# bindsym $mod+Shift+plus             gaps outer current plus  5
# bindsym $mod+Shift+minus            gaps outer current minus 5
# bindsym $mod+Control+plus           gaps inner all     plus  5
# bindsym $mod+Control+minus          gaps inner all     minus 5
# bindsym $mod+Control+Shift+plus     gaps outer all     plus  5
# bindsym $mod+Control+Shift+minus    gaps outer all     minus 5

#: }}}

#: Media control {{{

# audio
bindsym XF86AudioMute           exec amixer set Master toggle
bindsym XF86AudioMicMute        exec amixer set Capture toggle
bindsym XF86AudioRaiseVolume    exec amixer set Master 2.5%+,5%+;
bindsym XF86AudioLowerVolume    exec amixer set Master 2.5%-,5%-;

# play/pause keys for spotify
bindsym XF86AudioPlay exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
bindsym XF86AudioNext exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next
bindsym XF86AudioPrev exec dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous

#: }}}

#: Misc {{{

# backlight
bindsym XF86MonBrightnessUp     exec --no-startup-id light -A 10 && notify-send 'Brightness UP' -u low"
bindsym XF86MonBrightnessDown   exec --no-startup-id light -U 10 && notify-send 'Brightness DOWN' -u low"

# screenshot
bindsym Print exec --no-startup-id "flameshot gui -p $HOME/Pictures"

#: }}}

#: }}}

#: Statusbar {{{

# Read `man 5 sway-bar` for more information about this section.
bar {
	# position top

  # When the status_command prints a new line to stdout, swaybar updates.
  # The default just shows the current date and time.
  # status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

  # colors {
  #     statusline #ffffff
  #     background #323232
  #     inactive_workspace #32323200 #32323200 #5c5c5c
  # }

  swaybar_command waybar

}

#: }}}

#: Application Settings {{{

# assign applications to specific workspace
assign [class="(?i)(?:firefox)"] \
  $ws2

for_window [class="(?i)(?:spotify)"] \
  move --no-auto-back-and-forth to workspace $ws10

for_window [app_id="(?i)(?:keepassxc)"] \
  move --no-auto-back-and-forth to workspace $ws9

for_window [app_id="(?i)(?:telegram)"] \
  move --no-auto-back-and-forth to workspace $ws9

# focus, floating, & sticky
for_window [class="(?i)(?:qt5ct|pinentry)"] \
  floating enable, focus
for_window [title="(?i)(?:copying|deleting|moving)"] \
  floating enable
for_window [window_role="(?i)(?:about|pop-up|setup)"] \
  floating enable

for_window [title="Android Emulator"] \
  floating enable
# GOG Games installer
for_window [class="(?i)(?:mojosetup)"] \
  floating enable
# Flameshot
for_window [class="(?i)(?:flameshot)"] \
  floating enable
#Ulauncher
for_window [class="(?i)(?:Ulauncher)"] \
  floating enable

popup_during_fullscreen smart

#: }}}

include /etc/sway/config.d/*

# vim:fileencoding=utf-8:ft=conf:foldmethod=marker
